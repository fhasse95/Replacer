language: objective-c
osx_image: xcode10.2

env:
  global:
    - LC_CTYPE=en_US.UTF-8
    - WORKSPACE=Replacer.xcworkspace
    - CONFIG=Release
    - ACTION="build-for-testing test-without-building"

branches:
  only: 
    - master

cache:
  bundler: true
  directories:
    - Carthage

matrix:
  include:
    - env: JOB=pod_lint
      script:
        - bundle
        - pod lib lint --quick

    - env: JOB=xcode SCHEME=Replacer XCODE_OPTION=""
    - env: JOB=xcode SCHEME=Replacer XCODE_OPTION="-sdk macosx"
    - env: JOB=xcode SCHEME=Replacer DESTINATION="OS=12.2,name=iPhone XS" XCODE_OPTION="-sdk iphonesimulator"
    - env: JOB=xcode SCHEME=Replacer DESTINATION="OS=12.2,name=Apple TV 4K" XCODE_OPTION="-sdk appletvsimulator"

    - env: JOB=xcode SCHEME=TestReplacer DESTINATION="OS=11.4,name=iPhone X" XCODE_OPTION=""
    - env: JOB=xcode SCHEME=TestReplacer XCODE_OPTION="-sdk macosx"
    - env: JOB=xcode SCHEME=TestReplacer DESTINATION="OS=11.4,name=iPhone X" XCODE_OPTION="-sdk iphonesimulator"
    - env: JOB=xcode SCHEME=TestReplacer DESTINATION="OS=12.2,name=Apple TV 4K" XCODE_OPTION="-sdk appletvsimulator"

    - env: JOB=swiftpm
      os: osx
      language: generic
      script:
        - swift build
        - swift test -Xswiftc -DSWIFTPM

script:
  - set -o pipefail
  - if [ -v DESTINATION ]; then
      xcodebuild $ACTION -workspace "$WORKSPACE" -scheme "$SCHEME" $XCODE_OPTION -destination "$DESTINATION" -configuration "$CONFIG" ENABLE_TESTABILITY=YES | xcpretty;
    else
      xcodebuild $ACTION -workspace "$WORKSPACE" -scheme "$SCHEME" $XCODE_OPTION -configuration "$CONFIG" ENABLE_TESTABILITY=YES | xcpretty;
    fi

before_script:
  - carthage bootstrap --cache-builds

after_success:
- |
  if [ "$JOB" == "xcode" ] && [ -z "$XCODE_OPTION" ]; then
    bash <(curl -s https://codecov.io/bash)
  fi
  sleep 10

notifications:
  email: false
